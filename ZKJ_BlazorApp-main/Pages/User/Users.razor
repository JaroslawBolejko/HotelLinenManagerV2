@page "/Users"
@attribute [Authorize]
@inject IUserService UserService
@inject ICompanyService CompanyService



@if (UserMe == null || UserMe.Company.Name == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="row justify-content-center m-3">
        <div class="col-sm-8">
            <div class="card">
                <div class="card-header text-center">
                    <h4>@UserMe.FirstName @UserMe.LastName</h4>
                </div>

                <div class="card-body text-left">
                    <img class="card-img-top mx-auto d-block" style="height:200px; width:150px;" src="@UserMe.PhotoPath" />
                    <ul>
                        <li><b>Username</b> : @UserMe.Username</li>
                        <li><b>Role</b> : @UserMe.Permission</li>
                        <li><b>Emial</b> : @UserMe.Email</li>
                        <li><b>Company</b> : @UserMe.Company.Name</li>
                    </ul>

                </div>
                <div class="card-footer text-center">
                    <a href="/" class="btn btn-primary">Back</a>
                    <a href="/edituserme" class="btn btn-primary">Edit</a>
                    @if (UserMe.Permission.ToString() == "AdminHotel")
                    {
                        <a class="btn btn-danger" @onclick="() => Delete(UserMe.Id)">Delete</a>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    private User UserMe { get; set; }


    protected override async Task OnInitializedAsync()
    {
        UserMe = await UserService.GetMe();
    }

    protected async Task Delete(int id)
    {
        await UserService.Delete(id);
    }

}
