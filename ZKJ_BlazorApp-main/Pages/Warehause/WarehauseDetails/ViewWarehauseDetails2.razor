@page "/viewWarehauseDetails2/{Id}"
@attribute [Authorize]
@inject IWarehauseDetailsService WarehauseDetailsService
@inject IWarehauseService WarehauseService
@inject ILaundryServiceService LaundryServiceService
@inject ILaundryServiceDetailsService LaundryServiceDetailsService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


@if (loading)
{
    <div class="spinner-border spinner-border-sm"></div>
}
@if (warehause != null)
{
    <h3>@warehause.Name nr @warehause.WarehauseNumber</h3>
}

<div class="center">

    <table class="table">
        <thead>
            <tr>
                <th scope="col">
                    Name
                </th>
                <th scope="col">
                    Color
                </th>
                <th scope="col">
                    Amount
                </th>
            </tr>
        </thead>
        <tbody>

            @if (warehauseDetails != null)
            {
                @foreach (var detail in warehauseDetails)
                {
                    <tr>
                        <th scope="row">@detail.HotelLinenName</th>
                        <td>@detail.Color</td>
                        <td>@detail.Amount</td>

                        @if (warehause.WarehauseType.ToString() != "DirtyLinenWarehause")
                        {
                            <td>

                                <a class="btn btn-primary" href='/partialMove/@detail.Id'>Move</a>
                                @*<a class="btn btn-primary" href='/edithotellinen/@hotelLinen.Id'>Edit</a>  | Delete*@
                                <a class="btn btn-danger" @onclick="() => Delete(detail.Id)">Delete</a>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
    <div class="form-group">
        @if (warehause != null && warehause.WarehauseType.ToString() == "CleanLinenWarehause")
        {
            <a class="btn btn-primary" href='/addLinenToWarehause/@Id'>Add Linen To Warehause</a>

        }
        <a class="btn btn-primary" @onclick="() => MoveToLoundry()">Move To Loundry</a>
        <a class="btn btn-primary" href='/warehauses'>Back</a>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; }
    private bool loading;
    private IEnumerable<Models.WarehauseDetail> warehauseDetails;
    private Warehause warehause;
    private LaundryService lastLaundry;
    private LaundryService laundry;
    private LaundryServiceDetail laundryServiceDetail;
    private LaundryService createdLaundryService;
    private string numberToFilter;


    protected override async Task OnInitializedAsync()
    {
        loading = true;
        warehauseDetails = await WarehauseDetailsService.GetWarehauseLinen(int.Parse(Id));
        warehause = await WarehauseService.GetWarehauseById(int.Parse(Id));
        lastLaundry = (await LaundryServiceService.GetAllLaundry()).OrderBy(x => x.Number).Last();
        loading = false;
    }

    protected async Task Delete(int id)
    {
        await WarehauseDetailsService.Delete(id);
    }


    protected string DocumentNumerCreator(string str)
    {
        StringBuilder sb = new StringBuilder();
        string docNumber;
        int number = 0;
        if (str == null)
        {
            docNumber = "1";
        }
        else
        {
            var tab = str.Split("/", StringSplitOptions.RemoveEmptyEntries);
            number = int.Parse(tab[0]) + 1;
            docNumber = number.ToString();

        }
        string date = DateTime.Now.ToString("MM/yyyy").Replace(".", "/");

        return sb.Append(docNumber).Append('/').Append(date).ToString();

    }
    protected async Task MoveToLoundry()
    {
        laundry = new LaundryService
        {
            Name = "Usługa Prania",
            Number = DocumentNumerCreator(lastLaundry.Number),
            CompanyId = lastLaundry.CompanyId,
            IsFinished = false,
            RecievedDate = DateTime.Now,
            IssuedDate = null

        };
        numberToFilter = laundry.Number;

        await LaundryServiceService.CreateLaundry(laundry);
        createdLaundryService = (await LaundryServiceService.GetServiceByNumber(numberToFilter)).First();


        foreach (var detail in warehauseDetails)
        {
            laundryServiceDetail = new LaundryServiceDetail
            {
                LaundryServiceId = createdLaundryService.Id,
                HotelLinenId = detail.HotelLinenId,
                Amount = detail.Amount

            };

            await LaundryServiceDetailsService.CreateLaundryDetails(laundryServiceDetail);
        }
        foreach (var detail in warehauseDetails)
        {
            await WarehauseDetailsService.Delete(detail.Id);
        }

        navigationManager.NavigateTo($"/laundryservices");

    }

}




