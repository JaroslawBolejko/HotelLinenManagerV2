@page "/warehauses"
@attribute [Authorize]
@inject IWarehauseService WarehauseService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager


@if (SpinnerVisible == true)
{
    <SfSpinner Visible="true" Type="@SpinnerType.Bootstrap4" Size="100" Label="Data loading"></SfSpinner>
}

@if (WarehauseList != null)
{
    <SfGrid @ref="warehauseGrid" DataSource="@WarehauseList" AllowPaging="true" AllowSorting="true" AllowFiltering="true" Toolbar="Toolbaritems">
        <GridEvents OnToolbarClick="ToolbarClickHandler" RowSelected="RowSelectHandler" OnActionBegin="ActionBeginHandler" TValue="Warehause"></GridEvents>
        <GridPageSettings PageSize="10" PageCount="5" PageSizes="@pagerDropdown"></GridPageSettings>
        <GridFilterSettings Mode="Syncfusion.Blazor.Grids.FilterBarMode.Immediate" Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
        <GridEditSettings Mode="EditMode.Dialog" AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>

        <GridColumns>
            <GridColumn AllowAdding="true" Visible="false" IsPrimaryKey="true" Field=@nameof(Warehause.Id) HeaderText="Id"></GridColumn>
            <GridColumn AllowAdding="true" Visible="false" Field="@nameof(Warehause.CompanyId)" HeaderText="CompanyId"></GridColumn>
            <GridColumn AllowAdding="true" Visible="false" Field=@nameof(Warehause.WarehauseType) HeaderText="WarehauseType"></GridColumn>
            <GridColumn Field=@nameof(Warehause.Name) HeaderText="Name"></GridColumn>
            <GridColumn Field=@nameof(Warehause.WarehauseNumber) HeaderText="Warehause number"></GridColumn>
        </GridColumns>
    </SfGrid>
}


@code {
    private List<Warehause> WarehauseList { get; set; }
    string[] pagerDropdown = new string[] { "All", "5", "10", "15", "20" };
    private List<Object> Toolbaritems = new List<Object>() { "Add", "Edit", "Delete", "Update", "Cancel", new ItemModel() { Text = "View Details", TooltipText = "View", PrefixIcon = "e-click", Id = "View" } };
    public bool SpinnerVisible { get; set; }
    public SfGrid<Warehause> warehauseGrid { get; set; }
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SpinnerVisible = true;
        WarehauseList = (await WarehauseService.GetAll()).ToList();
        SpinnerVisible = false;

    }

   
    public void RowSelectHandler(RowSelectEventArgs<Warehause> args)
    {
        Id = args.Data.Id;
    }
    public void ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {

        if (args.Item.Id == "View")
        {
            if (Id == 0)
            {
                navigationManager.NavigateTo($"/warehauses");
            }
            else
            {
                navigationManager.NavigateTo($"/viewWarehauseDetails/{Id}");

            }
        }
    }
    public async void ActionBeginHandler(ActionEventArgs<Warehause> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (args.Action == "Add")
            {
                await WarehauseService.CreateWarehause(args.Data);
                WarehauseList = (await WarehauseService.GetAll()).ToList();
                warehauseGrid.Refresh();
            }
            if (args.Action == "Edit")
            {
                await WarehauseService.Update(args.Data);
            }

        }
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await WarehauseService.Delete(args.Data.Id);
        }
    }


}