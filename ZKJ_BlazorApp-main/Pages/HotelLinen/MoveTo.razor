@page "/movehotellinen/{Id}"
@inject IHotelLinenService HotelLinenService
@inject IWarehauseService WarehauseService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="hotelLinen">
                <div class="form-group">


                    @*<label for="MovedQuantity" class="control-label">Moved Quantity</label>
                        <input for="MovedQuantity" class="form-control" @bind-value="@ElementsToMove" />*@

                    <label for="Amount" class="control-label">Change Amount</label>
                    <input for="Amount" class="form-control" @bind-value="@hotelLinen.Amount" />

                    <label for="Amount" class="control-label">Add</label>
                    <input for="Amount" class="form-control" @bind-value="@hotelLinen.Amount" />

                    <label for="Amount" class="control-label">Subtract</label>
                    <input for="Amount" class="form-control" @bind-value="@hotelLinen.Amount" />

                    <label for="Warehause" class="control-label">Warehause</label>
                    <InputSelect id="Warehause" @bind-Value="WarehauseId" class="form-control">
                        @if (warehauses != null)
                        {
                            @foreach (var warehause in warehauses)
                            {
                                <option value="@warehause.Id">@warehause.Name</option>
                            }
                        }
                    </InputSelect>

                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-primary" @onclick="() => UpdateHotelLinen()">Save</button>
                    <button type="button" class="btn btn-danger" @onclick="() => cancel()">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
@code{
    [Parameter]
    public string Id { get; set; }
    private Models.HotelLinen hotelLinen = new Models.HotelLinen();
    private List<Warehause> warehauses;
    public string WarehauseId { get; set; }
    //public string ElementsToMove { get; set; }



    protected override async Task OnInitializedAsync()
    {
        hotelLinen = await HotelLinenService.GetById(int.Parse(Id));
        warehauses = (await WarehauseService.GetAll()).ToList();
        WarehauseId = hotelLinen.WarehauseId.ToString();
    }
    protected async Task UpdateHotelLinen()
    {
        await HotelLinenService.Update(hotelLinen);
        navigationManager.NavigateTo("/hotellinens");
    }

    void cancel()
    {
        navigationManager.NavigateTo("/hotellinens");
    }
    //protected string MoveElements(string amount, string elementsToMove)
    //{
    //    var amountValue = int.Parse(amount);
    //    var etmValue = int.Parse(elementsToMove);

    //    var result = amountValue - etmValue;
    //    return result.ToString();
    //}
}