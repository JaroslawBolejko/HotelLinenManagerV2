@page "/movehotellinen/{Id}"
@inject IHotelLinenService HotelLinenService
@inject IWarehauseService WarehauseService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

    <h1>Choose warehause, to move hotel linen.</h1>

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <EditForm Model="hotelLinen">
                    <div class="form-group">

                        <input type="hidden" @bind-value="@hotelLinen.Id" />

                        <input type="hidden" class="form-control" @bind-value="@hotelLinen.NameWithShortDescription" />

                        <input type="hidden" class="form-control" @bind-value="@hotelLinen.Color" />

                        <input type="hidden" class="form-control" @bind-value="@hotelLinen.HotelLinenTypeId" />

                        <input type="hidden" class="form-control" @bind-value="@hotelLinen.Amount" />

                        <label for="WarehauseType" class="control-label">WarehauseType</label>
                        <CustomInputSelect id="WarehauseType" @bind-Value="@hotelLinen.WarehauseId" class="form-control">
                            @if (warehauses != null)
                            {
                                @foreach (var warehause in warehauses)
                                {
                                    <option value="@warehause.Id">@warehause.Name</option>
                                }
                            }
                        </CustomInputSelect>


                    </div>
                    <div class="form-group">
                        <button type="button" class="btn btn-primary" @onclick="() => UpdateHotelLinen()">Save</button>
                        <button type="button" class="btn btn-danger" @onclick="() => cancel()">Cancel</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    @code{
        [Parameter]
        public string Id { get; set; }
        private Models.HotelLinen hotelLinen = new Models.HotelLinen();
        private IEnumerable<Warehause> warehauses; 


        protected override async Task OnInitializedAsync()
        {
            hotelLinen = await HotelLinenService.GetById(int.Parse(Id));
            warehauses = await WarehauseService.GetAll();

        }
        protected async Task UpdateHotelLinen()
        {
            await HotelLinenService.Update(hotelLinen);
            navigationManager.NavigateTo($"/viewwarhause/{hotelLinen.WarehauseId}");
        }

        void cancel()
        {
            navigationManager.NavigateTo("/hotellinens");
        }
        //protected string MoveElements(string amount, string elementsToMove)
        //{
        //    var amountValue = int.Parse(amount);
        //    var etmValue = int.Parse(elementsToMove);

        //    var result = amountValue - etmValue;
        //    return result.ToString();
        //}
    }